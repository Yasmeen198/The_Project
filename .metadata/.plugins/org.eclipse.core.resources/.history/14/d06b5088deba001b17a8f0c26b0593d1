package com.vogue.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.vogue.model.BillingAddress;
import com.vogue.model.Customer;
import com.vogue.model.ShippingAddress;
import com.vogue.service.CustomerService;


	@Controller
	public class CustomerController {
	
		@Autowired
		private CustomerService customerService;

		@GetMapping(value = {"/register"})
		public String addCustomer(Model model)
		{
			Customer customer=new Customer();
			ShippingAddress shippingAddress=new ShippingAddress();
			BillingAddress billingAddress=new BillingAddress();
			customer.setBillingAddress(billingAddress);
			customer.setShippingAddress(shippingAddress);
			
			
			model.addAttribute("customer", customer);
			return "register";
		}
		
		@PostMapping(value={"/register"})
		public String addCustomerDB(@ModelAttribute("customer")Customer customer)
		{
			customer.setEnabled(true);
			
			boolean result = customerService.addCustomer(customer);
			if(result)
			{
				return "login";
			}
			else
			{
				return "redirect:/register";
			}
		
		}
		
		@GetMapping("/login")
		public String loginPage(@RequestParam(value = "error", required = false) String error,
				@RequestParam(value = "logout", required = false) String logout, Model model) {

			if (error != null) {
				model.addAttribute("error", "Invalid username and password");
			}

			if (logout != null) {
				model.addAttribute("msg", "You have been logged out successfully");
			}

			return "login";
		}
		
		@GetMapping("/perform_logout")
		public String logoutPage(HttpServletRequest request, HttpServletResponse response) {
			Authentication auth = SecurityContextHolder.getContext().getAuthentication();
			if (auth != null) {
				new SecurityContextLogoutHandler().logout(request, response, auth);
			}
			return "redirect:/";
		}
	}




